{% extends 'base.html.twig' %}

{% block body %}
    {% for message in app.session.flashbag.get('notice') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    <div>
        <div style="width: 48%; display: inline-block; margin-right: 25px;">
            <hr>
                Recherche par nom scientifique
            <hr>

            {{ form_start(searchReferenceNameForm) }}
            {{ form_errors(searchReferenceNameForm) }}
            {{ form_end(searchReferenceNameForm) }}
        </div>

        <div style="width: 48%; display: inline-block">
            <hr>
                Recherche par nom commun
            <hr>

            {{ form_start(searchVernacularNameForm) }}
            {{ form_errors(searchVernacularNameForm) }}
            {{ form_end(searchVernacularNameForm) }}
        </div>

        <div style="width: 48%; display: inline-block; margin-right: 25px;">
            <hr>
                Recherche par ordre
            <hr>

            {{ form_start(searchTypeForm) }}
            {{ form_errors(searchTypeForm) }}
            {{ form_end(searchTypeForm) }}
        </div>

        <div style="width: 48%; display: inline-block">
            <hr>
                Recherche par famille
            <hr>

            {{ form_start(searchFamilyForm) }}
            {{ form_errors(searchFamilyForm) }}
            {{ form_end(searchFamilyForm) }}
        </div>
    </div>
    <button id="testGeo">GÃ©olocalisation</button>
    <div id="map" style="height: 500px; margin-top: 15px"></div>


{% endblock %}

{% block javascripts %}
    <script>

        var customLabel = {
            restaurant: {
                label: 'R'
            },
            bar: {
                label: 'B'
            }
        };

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 4,
                center: new google.maps.LatLng(46.6, 1.9),
                mapTypeId: 'roadmap'
            });
            var infoWindow = new google.maps.InfoWindow;

            var icons = {
                parking: {
                    icon: '{{ asset('img/test1.png') }}'
                }
            };

            // Change this depending on the name of your PHP or XML file
            downloadUrl("{{ asset('markers/markers.xml') }}", function(data) {
                var xml = data.responseXML;
                var markers = xml.documentElement.getElementsByTagName('marker');
                var markerArray = [];
                Array.prototype.forEach.call(markers, function(markerElem) {
                    var name = markerElem.getAttribute('user');
                    var address = markerElem.getAttribute('address');
                    var type = markerElem.getAttribute('type');
                    var point = new google.maps.LatLng(
                        parseFloat(markerElem.getAttribute('lat')),
                        parseFloat(markerElem.getAttribute('lng')));

                    var infowincontent = document.createElement('div');
                    infowincontent.innerHTML =
                        '<img style="width: 100px;" src="{{ asset('uploads/observations_files/5d4a35502bd4887eab896433dbc88e26.png') }}"/><p>Ceci est un test</p>';
                    var strong = document.createElement('strong');
                    strong.textContent = name;
                    infowincontent.appendChild(strong);
                    infowincontent.appendChild(document.createElement('br'));

                    var text = document.createElement('text');
                    text.textContent = address
                    infowincontent.appendChild(text);

                    var icon = icons[type].icon || {};

                    {% if not is_granted('ROLE_PROFESSIONAL') %}
                        var marker = new google.maps.Circle({
                            strokeColor: '#FF0000',
                            strokeOpacity: 0.35,
                            strokeWeight: 2,
                            fillColor: '#FF0000',
                            fillOpacity: 0.35,
                            map: map,
                            center: point,
                            radius: 10000
                        });
                    {% else %}
                        var marker = new google.maps.Marker({
                            map: map,
                            position: point,
                            icon: icon,
                            label: icon.label
                        });

                        markerArray.push(marker);
                        console.log(markerArray);

                        marker.addListener('click', function() {
                            infoWindow.setContent(infowincontent);
                            infoWindow.open(map, marker);
                        });
                    {% endif %}


                });

                var markerCluster = new MarkerClusterer(
                    map,
                    markerArray,
                    {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'}
                );
            });
        }



        function downloadUrl(url, callback) {
            var request = window.ActiveXObject ?
                new ActiveXObject('Microsoft.XMLHTTP') :
                new XMLHttpRequest;

            request.onreadystatechange = function() {
                if (request.readyState === 4) {
                    request.onreadystatechange = doNothing;
                    callback(request, request.status);
                }
            };

            request.open('GET', url, true);
            request.send(null);
        }

        function doNothing() {}
    </script>
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNQR3Hw_y1urMSouzdoaVgUESayHjM90g&&callback=initMap" async defer></script>
{% endblock %}